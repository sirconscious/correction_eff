{"ast":null,"code":"import axios from \"axios\";\nimport { getall } from \"../../apis/endpoints\";\nconst initialeState = {\n  ListeSimultaion: [{\n    id: 3000000,\n    Driots_en: 120000,\n    Consevation: 45200,\n    Date: new Date().toISOString().split('T')[0],\n    total: 207950\n  }]\n};\nconst dosierFetching = async () => {\n  try {\n    const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}${getall}`);\n    console.log(response.data);\n    initialeState.ListeSimultaion = response.data;\n  } catch (error) {\n    var _error$response;\n    console.error(\"Erreur lors de la récupération des dossiers :\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  }\n};\ndosierFetching();\nconst FraisReducer = (state = initialeState, action) => {\n  switch (action.type) {\n    case \"AJOUTER\":\n      return {\n        ListeSimultaion: [...state.ListeSimultaion, action.payload]\n      };\n    case \"VIDER\":\n      return {\n        ListeSimultaion: []\n      };\n    default:\n      return state;\n  }\n};\n_c = FraisReducer;\nexport default FraisReducer;\nvar _c;\n$RefreshReg$(_c, \"FraisReducer\");","map":{"version":3,"names":["axios","getall","initialeState","ListeSimultaion","id","Driots_en","Consevation","Date","toISOString","split","total","dosierFetching","response","get","process","env","REACT_APP_BACKEND_URL","console","log","data","error","_error$response","message","FraisReducer","state","action","type","payload","_c","$RefreshReg$"],"sources":["/home/mehdi/Documents/programing/eff_correction/frontend/src/redux/Reducers/FraisReducer.js"],"sourcesContent":["import axios from \"axios\" \nimport { getall } from \"../../apis/endpoints\";\nconst initialeState={\n    ListeSimultaion : [\n        {\n            id: 3000000,\n            Driots_en: 120000,\n            Consevation: 45200,\n            Date: new Date().toISOString().split('T')[0],\n            total: 207950\n        }\n    ]\n} \nconst dosierFetching = async () => {\n  try {\n    const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}${getall}`);\n    console.log(response.data);  \n    initialeState.ListeSimultaion = response.data\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération des dossiers :\", error.response?.data || error.message);\n  }\n}; \ndosierFetching();\nconst FraisReducer = (state = initialeState, action) => {\n    switch (action.type) {\n        case \"AJOUTER\":\n            return {\n                ListeSimultaion: [...state.ListeSimultaion, action.payload]\n            } \n        case \"VIDER\":\n            return {\n                ListeSimultaion: []\n            }\n        default:\n            return state;\n    }\n} \n\nexport default FraisReducer"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,MAAMC,aAAa,GAAC;EAChBC,eAAe,EAAG,CACd;IACIC,EAAE,EAAE,OAAO;IACXC,SAAS,EAAE,MAAM;IACjBC,WAAW,EAAE,KAAK;IAClBC,IAAI,EAAE,IAAIA,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5CC,KAAK,EAAE;EACX,CAAC;AAET,CAAC;AACD,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACjC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,GAAGf,MAAM,EAAE,CAAC;IACjFgB,OAAO,CAACC,GAAG,CAACN,QAAQ,CAACO,IAAI,CAAC;IAC1BjB,aAAa,CAACC,eAAe,GAAGS,QAAQ,CAACO,IAAI;EAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACdJ,OAAO,CAACG,KAAK,CAAC,+CAA+C,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACR,QAAQ,cAAAS,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;EACvG;AACF,CAAC;AACDX,cAAc,CAAC,CAAC;AAChB,MAAMY,YAAY,GAAGA,CAACC,KAAK,GAAGtB,aAAa,EAAEuB,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,SAAS;MACV,OAAO;QACHvB,eAAe,EAAE,CAAC,GAAGqB,KAAK,CAACrB,eAAe,EAAEsB,MAAM,CAACE,OAAO;MAC9D,CAAC;IACL,KAAK,OAAO;MACR,OAAO;QACHxB,eAAe,EAAE;MACrB,CAAC;IACL;MACI,OAAOqB,KAAK;EACpB;AACJ,CAAC;AAAAI,EAAA,GAbKL,YAAY;AAelB,eAAeA,YAAY;AAAA,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}